keyword,code
variable declaration,var x = 5;
function declaration,"function myFunction() {
  // code here
}"
if statement,"if (condition) {
  // code here
} else {
  // code here
}"
for loop,"for (var i = 0; i < 10; i++) {
  // code here
}"
while loop,"while (condition) {
  // code here
}"
switch statement,"switch (expression) {
  case value1:
    // code here
    break;
  case value2:
    // code here
    break;
  default:
    // code here
}"
array declaration,"var arr = [1, 2, 3];"
object declaration,var obj = {key: value};
arrow function declaration,"var myFunc = () => {
  // code here
}"
template literals,"var name = 'John';
console.log(`Hello, ${name}!`);"
try catch statement,"try {
  // code here
} catch (error) {
  // code here
}"
async function declaration,"async function myAsyncFunction() {
  // code here
}"
promise declaration,"const myPromise = new Promise((resolve, reject) => {
  // code here
});"
fetch API,"fetch('https://api.example.com/data')
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error('Error:', error));"
async and await method,"async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error('Error:', error);
  }
}"
array forEach method,"const numbers = [1, 2, 3];
numbers.forEach(number => console.log(number));"
async/await,"async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    const data = await response.json();
    console.log(data);
  } catch (error) {
    console.error('Error:', error);
  }
}"
array map method,"const numbers = [1, 2, 3];
const doubledNumbers = numbers.map(number => number * 2);"
array filter method,"const numbers = [1, 2, 3, 4, 5];
const evenNumbers = numbers.filter(number => number % 2 === 0);"
array reduce method,"const numbers = [1, 2, 3, 4, 5];
const sum = numbers.reduce((total, number) => total + number, 0);"
destructuring assignment,"const person = { name: 'John', age: 30 };
const { name, age } = person;"
spread operator,"const numbers = [1, 2, 3];
const newNumbers = [...numbers, 4, 5];"
string concatenation,"const firstName = 'John';
const lastName = 'Doe';
const fullName = firstName + ' ' + lastName;"
string interpolation,"const name = 'John';
console.log(`Hello, ${name}!`);"
array push method,"const numbers = [1, 2, 3];
numbers.push(4);"
array pop method,"const numbers = [1, 2, 3];
const lastNumber = numbers.pop();"
array shift method,"const numbers = [1, 2, 3];
const firstNumber = numbers.shift();"
array unshift method,"const numbers = [2, 3];
numbers.unshift(1);"
array slice method,"const numbers = [1, 2, 3, 4, 5];
const slicedNumbers = numbers.slice(1, 3);"
array splice method,"const numbers = [1, 2, 3, 4, 5];
numbers.splice(2, 1);"
array indexOf method,"const numbers = [1, 2, 3, 4, 5];
const index = numbers.indexOf(3);"
array includes method,"const numbers = [1, 2, 3, 4, 5];
const isPresent = numbers.includes(3);"
